eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGRfZG9ja2VyX2ltYWdlOgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IGltYWdlIC4KCiAgbGF0ZXN0X2ltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrZHJvbmVfYXdzX2RzcF90b29sc2V0IiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgaW1hZ2UgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2F3cy1kc3AtdG9vbHNldDpsYXRlc3QKICAgICAgLSBkb2NrZXIgdGFnIGltYWdlIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9hd3MtZHNwLXRvb2xzZXQ6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9hd3MtZHNwLXRvb2xzZXQ6bGF0ZXN0CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2F3cy1kc3AtdG9vbHNldDoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICB0YWdfaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtkcm9uZV9hd3NfZHNwX3Rvb2xzZXQiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBpbWFnZSBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvYXdzLWRzcC10b29sc2V0OiR7RFJPTkVfVEFHfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9hd3MtZHNwLXRvb2xzZXQ6JHtEUk9ORV9UQUd9CiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Igo.CY2auBLr8GSa14QRyN6coXB9WZ-SYAf1zWlDE2D_Pns